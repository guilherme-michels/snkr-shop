// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id          String     @id @unique @default(uuid())
  name        String
  code        String
  price       String
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  type        String
  image       String
  sizes       ShoeSize[]
  cartItems   CartItem[]
  Cart        Cart?      @relation(fields: [cartId], references: [id])
  cartId      String?
  Sales       Sales[]
  bestSeller  Boolean
}

model User {
  id        String   @id @unique @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  position  String
  phone     String
  cpf       String
  dateBirth String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]
  Sales     Sales[]
}

model ShoeSize {
  id        String   @id @unique @default(uuid())
  size      Float
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String   @id @unique @default(uuid())
  quantity  Int
  product   Product? @relation(fields: [productId], references: [id])
  cart      Cart?    @relation(fields: [cartId], references: [id])
  productId String
  cartId    String
  size      Int
}

model Cart {
  id        String     @id @unique @default(uuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]
}

model Sales {
  id        Int      @id @default(autoincrement())
  valor     Float
  data      DateTime @default(now())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  size      Int
}
